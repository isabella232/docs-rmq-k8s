---
title: RabbitMQ for VMware Tanzu &#91;Kubernetes&#93; (Beta)Â 
owner: RMQ for k8s
---

<strong><%= modified_date %></strong>

<%= partial vars.path_to_partials + '/services/beta-notice',
:locals => {:product_full => vars.product_full, :platform_name => vars.platform_name} %>

<%= vars.product_full %> is a Kubernetes Operator that automates provisioning, managing,
and operating RabbitMQ clusters running on Kubernetes.

Kubernetes Operators are software extensions to Kubernetes that make use of custom resources to manage apps
and their components.
For general information about Operators, see the
[Kubernetes documentation](https://kubernetes.io/docs/concepts/extend-kubernetes/operator).

## <a id='overview'></a> Overview

<%= vars.product_short %> provides a consistent and easy way to deploy RabbitMQ clusters to Kubernetes and
manage their lifecycle. RabbitMQ clusters can be accessed by apps running on Kubernetes,
<%= vars.app_runtime_full %> (<%= vars.app_runtime_abbr %>), or elsewhere.

<%= vars.product_short %> has two main components:

* A Kubernetes Operator that automates the provision, management, and operations of RabbitMQ clusters

When combined with <%= vars.app_runtime_abbr %>, <%= vars.product_short %> enables you to create and
bind RabbitMQ clusters with single commands.
Run `cf create-service` to create RabbitMQ clusters
and run `cf bind-service` to bind them to a <%= vars.app_runtime_abbr %>-deployed app.

## <a id='features'></a> Key Features

<%= vars.product_short %> includes the following key features:

* Provisioning of single-node and three-node RabbitMQ clusters
* Automatic reconciliation of deployed clusters whenever their actual state does not match the expected state
* Monitoring of RabbitMQ clusters through Prometheus and Grafana
For more information, see the [Prometheus](https://prometheus.io/docs/introduction/overview/)
and [Grafana](https://grafana.com/docs/) documentation.

Automated upgrades of RabbitMQ clusters, another key feature, is planned for a later update.

## <a id="snapshot"></a> Product Snapshot

The following table provides version and version-support information about <%= vars.product_short %>.

<table class="nice">
    <th>Element</th>
    <th>Details</th>
    <tr>
        <td>Version</td>
        <td>0.7</td>
    </tr>
    <tr>
        <td>Release date</td>
        <td>MONTH DD, 2020</td>
    </tr>
    <tr>
        <td>Software component version</td>
        <td>RabbitMQ OSS #.#.#</td>
    </tr>
</table>

## <a id="limitations"></a> Limitations

The following section lists limitations of <%= vars.product_short %>.

### <a id="gen-limits"></a> General Limitations

* This product is currently in beta. VMware does not provide commercial support.
* This product is intended to be used with any Kubernetes distribution.
  However, given the number of Kubernetes vendors, versions, and configurations, not all of them have been
  tested with <%= vars.product_short %>.
* Product upgrades are not supported. If you want to test a newer version, delete the previous version first.

### <a id='update-rmq-cluster'></a> RabbitMQ Cluster Reconciliation

Some properties are not reconciled currently (changing them in an existing cluster has no effect). All properties should be reconciled in the next version.
If you delete `Secret` objects, they will not be recreated by the Operator. You must manually re-create the secret or delete and re-create the cluster.

## <a id="feedback"></a> Feedback

If you have a feature request, questions, or information about an issue, please email
[RabbitMQ for VMware Tanzu &#91;Kubernetes&#93; Feedback](mailto:rabbitmq-for-k8s@pivotal.io).
