---
title: Troubleshooting RabbitMQ for VMware Tanzu &#91;Kubernetes&#93;
owner: RMQ for k8s
---

<strong><%= modified_date %></strong>

This topic describes how to troubleshoot common problems with <%= vars.product_full %>.

## <a id="#errors"></a>Troubleshoot Errors

If you are responding to a specific error or error message, see the following sections:

+ [RabbitMQ Cluster Fails to Deploy](#failed-instance)
+ [Pods Are Not Being Created](#no-pods)
+ [Pods Are Stuck in the Terminating State](#not-terminating-pods)


<%= partial vars.path_to_partials + "/troubleshoot-template", locals: {
    id: "failed-instance",
    description: "RabbitMQ Cluster Fails to Deploy",
    symptom: "After creating a RabbitMQ instance,
    it is not available within a few minutes and RabbitMQ Pods do not run.",
    cause: "Common reasons for such failure are: <br><br>
        <ul>
          <li> Incorrect <code> imagePullSecret</code> configuration.
          This prevents the image from being pulled from a Docker registry.</li>
          <li>Incorrect <code>storageClassName</code> configuration.</li>
        </ul>",
    solution: " To resolve this issue:
          <br><br>
          <ol>
            <li>Correct the <code>imagePullSecret</code> and <code>storageClassName</code>
            configurations. See <a href='./using.html#image-pull-secret'>imagePullSecret</a>,
            <a href='./using.html#persistence'>Persistence</a>, and
            <a href='./using.html#update'>Update a RabbitMQ Instance</a>.</li>
            <li>If the issue persists after updating the above configurations, view the status
            of your RabbitMQ cluster resources by following in the procedure in
            <a href='#check-instance-status'>Check the Status of an Instance</a>.
            </li>
            <li>
              Contact pivotal-cf-feedback@pivotal.io for assistance and
              provide the information you gather from the previous step.
            </li>
          </ol>"

} %>


<%= partial vars.path_to_partials + "/troubleshoot-template", locals: {
  id: "no-pods",
  description: "Pods Are Not Being Created",
  symptom: "You see an error such as:

  <pre class='terminal'> pods POD-NAME is forbidden: unable to validate against any pod security policy: []</pre>
  as an event of the underlying <code>ReplicaSet</code> of the Kubernetes Operator deployment, or as an
  event of the underlying <code>StatefulSet</code> of the <code>RabbitmqCluster</code>.",
  cause: "This occurs if Pod security policy admission control is enabled for the
  Kubernetes cluster, but you have not created the necessary <code>PodSecurityPolicy</code> and
  corresponding role-based access control (RBAC) resources.",
  solution: "Create the <code>PodSecurityPolicy</code> and RBAC resources by following the procedure in
  <a href='./using.html#psp'>Pod Security Policies</a>."
} %>


<%= partial vars.path_to_partials + "/troubleshoot-template", locals: {
    id: "not-terminating-pods",
    description: "Pods Are Stuck in the Terminating State",
    symptom: "After deleting a RabbitmqCluster instance, some Pods
    are stuck in the terminating state. RabbitMQ is still running in the affected Pods.",
    cause: "The likely cause is a leftover quorum queue in RabbitMQ.",
    solution: "To resolve this issue:
          <br><br>
          <ol>
            <li>Ensure there are no messages in the queue, or that it is acceptable to delete those messages.</li>
            <li>Delete the queue by force by running:
              <pre><code>kubectl delete pod --force --grace-period=0 -l 'POD-LABEL'</code></pre>
              or
              <pre><code>kubectl delete pod --force POD-NAME</code></pre>
            </li>
          </ol>

          This example uses a Pod label:
          <pre class='terminal'>
            kubectl delete pod --force --grace-period=0 -l 'app.kubernetes.io/name=rabbit-rollout-restart'
            warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.
            pod 'rabbit-rollout-restart-rabbitmq-server-0' force deleted
            pod 'rabbit-rollout-restart-rabbitmq-server-1' force deleted
          </pre>

          This example uses a Pod name:
          <pre class='terminal'>
            kubectl delete pod --force rabbit-rollout-restart-rabbitmq-server-1
            warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.
            pod 'rabbit-rollout-restart-rabbitmq-server-1' force deleted
          </pre>"

} %>


## <a id='ts-install'></a> Troubleshoot the Installation

This section lists troubleshooting techniques for
checking that you can provision an instance with
<%= vars.app_runtime_full %> (<%= vars.app_runtime_abbr %>).

### <a id='check-instance-status'></a> Check the Status of an Instance

To check if an instance is running and see information about it:

1. View the status of an instance by running

    ```
    kubectl -n NAMESPACE get all
    ```

    Where `NAMESPACE` is the Kubernetes namespace of the instance. <br><br>

    For example:

    <pre class="terminal">
      $ kubectl -n p-rmq-instance-1 get all
      NAME                            READY   STATUS    RESTARTS   AGE
      pod/pivotal-rabbitmq-server-0   1/1     Running   0          2m27s

      NAME                                TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                        AGE
      service/pivotal-rabbitmq-headless   ClusterIP   None             <none>        4369/TCP                       2m27s
      service/pivotal-rabbitmq-ingress    ClusterIP   10.111.202.183   <none>        5672/TCP,15672/TCP,15692/TCP   2m28s

      NAME                                       READY   AGE
      statefulset.apps/pivotal-rabbitmq-server   1/1     2m28s
    </pre>
