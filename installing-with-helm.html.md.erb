---
title: Installing RabbitMQ for VMware Tanzu &#91;Kubernetes&#93; with a Helm Chart
owner: RMQ for k8s
---

<strong><%= modified_date %></strong>

This topic describes how to install and configure <%= vars.product_full %> using a Helm chart hosted on
a <%= vars.product_network %> image registry.

In most cases, using a Helm chart is the fastest way to install <%= vars.product_short %>.
For more information about Helm charts, see the [Helm documentation](https://helm.sh/docs/topics/charts/).

If you do not want to use a Helm chart to install <%= vars.product_short %>,
follow the procedures in
[Installing <%= vars.product_full %> with Kubectl](./installing-with-kubectl.html) instead.


## <a id='prereqs'></a> Prerequisites

Before you install and configure <%= vars.product_short %>, you must install and configure:

* **kubectl:** For installation instructions,
see the [Kubernetes documentation](https://kubernetes.io/docs/tasks/tools/install-kubectl/).

* **The Docker CLI:** For installation instructions,
see the [Docker documentation](https://docs.docker.com/install/).

* **A Kubernetes cluster:** You must use Kubernetes v1.14 or later. A default StorageClass has to be configured
or you need to specify which StorageClass to use.

* **The Helm CLI:** For installation instructions, see the [Helm documentation](https://helm.sh/docs/intro/install/).

* **Access to the <%= vars.product_network %> image registry:** For more information, see
[Verify Your Access to the <%= vars.product_network %> Image Registry](#helm-verify-docker-access) below.


## <a id='overview'></a> Overview

To install and configure <%= vars.product_short %> using a Helm chart:

1. [Verify That You Can Access the <%= vars.product_network %> Image Registry](#helm-verify-docker-access)
1. [(Optional) Relocate the Operator Image](#relocate-op-image)
1. [Configure a Helm Chart Repository](#helm-configure-repo)
1. [Create a Values File](#helm-create-values)
1. [Helm Install](#helm-install-op)


## <a id='helm-verify-docker-access'></a> Verify That You Can Access the <%= vars.product_network %> Image Registry

To verify that you have access to the <%= vars.product_network %> registry:

1. Log in to the Docker registry by running:

    ```
    docker login registry.pivotal.io
    ```

1. At the username prompt, enter the email address associated with your <%= vars.product_network %> account.

1. At the password prompt, enter your <%= vars.product_network %> account password.

1. Pull the registry by running:

    ```
    docker pull registry.pivotal.io/p-rabbitmq-for-kubernetes/rabbitmq-for-kubernetes-operator:VERSION-NUMBER
    ```

    Where `VERSION-NUMBER` is the product version in <%= vars.product_network %>.
    For example, `0.7.0-build.41`.<br><br>

    If you see an error similar to:

    <pre class="terminal">
    Error response from daemon: pull access denied [...]
    </pre>

    Install <%= vars.product_short %> by following the procedures in
    [Installing RabbitMQ for VMware Tanzu &#91;Kubernetes&#93;](./installing-with-kubectl.html).<br><br>

    If you successfully pulled the image registry, and you do not want to relocate the Operator image, skip to
    [Configure a Helm Chart Repository](#helm-configure-repo) below.


## <a id='relocate-op-image'></a> (Optional) Relocate the Operator Image

<p class="note">
  <strong>Note:</strong> To relocate the Operator image, you need a separate image registry.
  VMware recommends that you keep the Kubernetes Operator image private even if your registry is publicly accessible.
  If you do not have access to a private image registry, email the team at rabbitmq-for-k8s@pivotal.io for help.
</p>

If you successfully pulled the image registry, and you want to relocate the Operator image,
follow these procedures.

### <a id='set-a-version-variable'></a>Set a Version Variable

<%= partial vars.path_to_partials + '/rabbitmq-kubernetes/set-a-version-variable' %>

### <a id='move-the-images'></a>Move the Images

<%= partial vars.path_to_partials + '/rabbitmq-kubernetes/move-the-images' %>

## <a id='helm-configure-repo'></a> Configure a Helm Chart Repository

To configure a Helm chart repository hosted in <%= vars.product_network %>:

1. Add a chart repository by running:

    ```
    helm repo add p-rabbitmq-for-kubernetes https://registry.pivotal.io/chartrepo/p-rabbitmq-for-kubernetes --username='EMAIL-ADDRESS' --password='PASSWORD'
    ```

    Where:
    * `EMAIL-ADDRESS` is the email address used to register in <%= vars.product_network %>.
    * `PASSWORD` is the same password of your <%= vars.product_network %> account.

1. Update the local cache by running:

    ```
    helm repo update
    ```


## <a id='helm-create-values'></a> Create a Values File

To create a values file:

1. Display the chart values by running:

    ```
    helm show values p-rabbitmq-for-kubernetes/rabbitmq-operator > VALUES-FILE.yaml
    ```

1. Open the values file and paste in the code below.

    ```
    global:
      imageRegistry: IMAGE-REGISTRY-URL
      imageUsername: USERNAME
      imagePassword: PASSWORD
    images:
      operator:
        name: IMAGE-REGISTRY-URL/PROJECT-NAME/rabbitmq-for-kubernetes-operator
        tag: "VERSION-NUMBER"
    ```

    Where:
    * `IMAGE-REGISTRY-URL` is your image registry URL.
    * `USERNAME` is the username for the image registry. If using the <%= vars.product_network %> image
    registry, your username is the email address linked to your <%= vars.product_network %> account.
    * `PASSWORD` is the password for the image registry. If using the <%= vars.product_network %> image registry,
    the password is your <%= vars.product_network %> account password.
    * `PROJECT-NAME` is your project name.
    * `VERSION-NUMBER` is your build version.

    This is an example of a customized values file:

    ```
    global:
      imageRegistry: someregistry.example.com
      imageUsername: myuser@example.com
      imagePassword: example-password
    images:
      operator:
        name: someregistry.example.com/some-project/rabbitmq-for-kubernetes-operator
        tag: "0.7.0-build.41"
    ```


## <a id='helm-install-op'></a> Install <%= vars.product_short %>

To install the Operator using Helm:

1. Install the chart by running:

    ```
    helm -n default install -f myvalues.yaml rabbitmq-for-kubernetes p-rabbitmq-for-kubernetes/rabbitmq-operator
    ```

    <p class="note">
      <strong>Note:</strong> Helm uses the option <code>-n default</code> to store a Kubernetes secret in the
      default namespace.
      Helm does this to avoid potential failures caused by kubectl referencing non-existing namespaces.
    </p>

1. Verify that the output of the `helm install` command is similar to the example below.

    <pre class="terminal">
    NAME: rabbitmq-for-kubernetes
    LAST DEPLOYED: Tue Mar 31 16:13:05 2020
    NAMESPACE: default
    STATUS: deployed
    REVISION: 1
    TEST SUITE: None
    </pre>
