---
title: Installing RabbitMQ for VMware Tanzu &#91;Kubernetes&#93;
owner: RMQ for k8s
---

<strong><%= modified_date %></strong>

This topic describes how to install and configure <%= vars.product_full %>.
If you want to install and configure <%= vars.product_full %> using a Helm chart
hosted on VMware Tanzu Network, follow the steps in
[Installing RabbitMQ for VMware Tanzu &#91;Kubernetes&#93; Using a Helm Chart](./installing-with-helm.html).

## <a id='prerequisites'></a> Prerequisites

Before you install and configure <%= vars.product_short %>, you must install and configure:

1. **kubectl:** For installation instructions,
see the [Kubernetes documentation](https://kubernetes.io/docs/tasks/tools/install-kubectl/).

1. **The Docker CLI:** For installation instructions,
see the [Docker documentation](https://docs.docker.com/install/).

1. **A Kubernetes cluster:** You must use Kubernetes v1.14 or later. A default StorageClass has to be configured
or you need to specify which StorageClass to use.

1. **A private image registry:** VMware recommends that you keep the Kubernetes Operator
image private even if your registry is publicly accessible.
If you do not have access to a private image registry, email the team at rabbitmq-for-k8s@pivotal.io for help.

## <a id='overview'></a> Overview

To install and configure <%= vars.product_short %>:

1. [Download <%= vars.product_full %>](#artifact)
1. [Set a Version Variable](#set-ver-var)
1. [Move the Images](#relocate)
1. [Create the Namespace and Role-Based Access Control Objects](#namespace-rbac)
1. [(Optional) Configure Kubernetes Cluster Access to Private Images](#private-images)
1. [Configure the Image Registry](#image-repo)
1. [Install <%= vars.product_short %>](#deploy-op)

## <a id='artifact'></a> Download <%= vars.product_short %>

To download the <%= vars.product_short %> artifact:

1. Download the **<%= vars.product_short %>** artifact from
[<%= vars.product_network %>](https://network.pivotal.io/products/p-rabbitmq-for-kubernetes/).

The artifact contains Docker images, deployment manifests for the Kubernetes Operator, and a Helm chart.
You can deploy <%= vars.product_short %> with the Helm chart by using Container Service Manager (KSM).
For more information, see [Using <%= vars.product_full %> with Container Service Manager](./ksm.html).
<br><br>
The images are for:

* RabbitMQ
* The Kubernetes Operator

## <a id='set-ver-var'></a> Set a Version Variable

To set a version variable:

1. Run:

    ```
    export version=NUMBER-build.NUMBER
    ```

    Where `NUMBER` is the installation artifact version listed in the name of the artifact file you downloaded.<br><br>
    For example:

    <pre class="terminal">
    export version=0.6.0-build.22
    </pre>

## <a id='relocate'></a> Move the Images

To move the images:

1. Load the images to your local Docker by running these commands:

    ```
    mkdir rabbitmq-for-kubernetes-${version}
    ```

    ```
    tar -C rabbitmq-for-kubernetes-${version} -xf rabbitmq-for-kubernetes-${version}.tar
    ```

    ```
    cd rabbitmq-for-kubernetes-${version}
    ```

    ```
    docker load -i images/rabbitmq-for-kubernetes-operator
    ```

    ```
    docker load -i images/rabbitmq
    ```

1. Tag each image to point to your own image registry by running these commands:

    ```
    docker tag registry.pivotal.io/p-rabbitmq-for-kubernetes-staging/rabbitmq \
      YOUR-REGISTRY/rabbitmq:$version
    ```

    ```
    docker tag registry.pivotal.io/p-rabbitmq-for-kubernetes-staging/rabbitmq-for-kubernetes-operator \
      YOUR-REGISTRY/rabbitmq-for-kubernetes-operator:$version
    ```

1. Push each image to your own image registry by running these commands:

    ```
    docker push YOUR-REGISTRY/rabbitmq:$version
    ```

    ```
    docker push YOUR-REGISTRY/rabbitmq-for-kubernetes-operator:$version
    ```

## <a id='namespace-rbac'></a> Create the Namespace and Role-Based Access Control Objects

To create the namespace and role-based access control (RBAC) objects:

1. Create a `pivotal-rabbitmq-system` namespace by running:

    ```
    kubectl apply -f manifests/namespace.yaml
    ```
1. Create RBAC objects in the `pivotal-rabbitmq-system` namespace by running:

    ```
    kubectl apply -f manifests/rbac.yaml
    ```

## <a id='private-images'></a> (Optional) Configure Kubernetes Cluster Access to Private Images

If you require authentication to pull images from your private image registry, you must authorize access to the
images from the `pivotal-rabbitmq-system` namespace.

<p class=note>
  <strong>Note:</strong> If your registry is publicly accessible, VMware recommends that you keep your
  Kubernetes Operator image in a private image registry.
</p>

To authorize access to images:

1. Create a secret for your private image registry by running:

    ```
    kubectl -n pivotal-rabbitmq-system create secret \
    docker-registry p-rmq-registry-access \
    --docker-server=DOCKER-SERVER \
    --docker-username=DOCKER-USERNAME \
    --docker-password=DOCKER-PASSWORD
    ```

    Where:
    + `DOCKER-SERVER` is the server URL for your private image registry.
    + `DOCKER-USERNAME` is your username for your private image registry authentication.
    + `DOCKER-PASSWORD` is your password for your private image registry authentication.

    For example:
    <pre class="terminal">
    $ kubectl -n pivotal-rabbitmq-system create secret \
    docker-registry p-rmq-registry-access \
    --docker-server=docker.io/my-registry \
    --docker-username=my-username \
    --docker-password=example-password1
    secret/p-rmq-registry-access created
    </pre>

1. Update your service account by running:

    ```
    kubectl -n pivotal-rabbitmq-system patch serviceaccount \
    p-rmq-operator -p '{"imagePullSecrets": [{"name": "p-rmq-registry-access"}]}'
    ```

## <a id='image-repo'></a> Configure the Image Registry

To configure the image registry:

1. Edit `manifests/operator.yaml`.
1. Replace all instances of `REPLACE-WITH-OPERATOR-IMAGE-URL` with the full Kubernetes Operator image reference.
This reference should look similar to the below:

    ```
    image: YOUR-REGISTRY/rabbitmq-for-kubernetes-operator:$version
    ```

## <a id='deploy-op'></a> Install <%= vars.product_short %>

To install <%= vars.product_short %>:

1. Run:

    ```
    kubectl apply -f manifests/
    ```

1. Apply the Kubernetes manifests you configured in the above steps. When you do so, kubectl:
    * Deploys the Kubernetes Operator
    * Installs the `RabbitmqCluster` custom resource definition (CRD)

To uninstall the product, follow the steps in [Uninstall Through the Manifests](./upgrading.html#uninstall-manifests).

## <a id='using-helm'></a> Install and Configure <%= vars.product_full %> Using a Helm Chart

This alternative method describes how to install and configure <%= vars.product_full %> using a Helm chart
hosted on VMware Tanzu Network.
For more information, see the [Helm documentation](https://helm.sh/docs/topics/charts/).

### <a id='helm-prereqs'></a> Prerequisites

In addition to the [prerequisites](#prerequisites) listed above, this method requires:

1. An account in VMware Tanzu Network
1. The Helm CLI. For installation instructions, see the [Helm documentation](https://helm.sh/docs/intro/install/).
1. Access to the Pivotal Network registry.
For more information, see [Verify Your Access to the Image Registry](#helm-verify-docker-access) below.

### <a id='helm-verify-docker-access'></a> Verify Your Access to the Image Registry

To verify your access to the VMware Tanzu Network registry:

1. Run:

    ```bash
    $ docker login registry.pivotal.io
    ```

    This command prompts a username and a password.
    The username is the email address used to register in VMware Tanzu Network.
    The password is your VMware Tanzu Network account password.

1. To pull the registry, run:

    ```bash
    $ docker pull registry.pivotal.io/p-rabbitmq-for-kubernetes/rabbitmq-for-kubernetes-operator:VERSION-NUMBER
    ```

    Where `VERSION-NUMBER` is the product version in VMware Tanzu Network. For example, `0.7.0-build.41`.

If the above command is successful and you do not want to relocate the Operator image, continue to
[Configure a Helm Chart Repository](#helm-configure-repo).

If the above command fails with an error similar to

```
Error response from daemon: pull access denied [...]
```

then follow the steps in [Set a Version Variable](#set-ver-var) above and then follow the steps in
[Move the Images](#relocate) above.
After you have finished these steps, proceed to [Configure Helm Chart Repository](#helm-configure-repo) below
or use the [main installation method](#overview) above if you do not have permission to pull the image.

### <a id='helm-configure-repo'></a> Configure a Helm Chart Repository

To configure a Helm chart repository hosted in VMware Tanzu Network:

1. Run:

    ```bash
    $ helm repo add p-rabbitmq-for-kubernetes https://registry.pivotal.io/chartrepo/p-rabbitmq-for-kubernetes --username='EMAIL-ADDRESS' --password='PASSWORD'
    ```

    Where:
    * `'EMAIL-ADDRESS'` is the email address used to register in VMware Tanzu Network
    * `'PASSWORD'` is the same password of your VMware Tanzu Network account.

    <p class='note'>
      <strong>Note:</strong> Helm stores these credentials in a hidden file in plaintext.
      Consider using a bot or shared account details instead of your personal account credentials.
    </p>


1. Update the local Helm cache by running:

    ```
    helm repo update
    ```


### <a id='helm-create-values'></a> Create a Values File

To create a values file:

1. Run:

    ```
    helm show values p-rabbitmq-for-kubernetes/rabbitmq-operator > myvalues.yaml
    ```

2. Open the values file and customize the properties. See an example below:

    ```
    global:
      imageRegistry: registry.pivotal.io
      # This is Pivotal Network username/email address
      imageUsername:
      imagePassword:
    images:
      operator:
        name: registry.pivotal.io/p-rabbitmq-for-kubernetes/rabbitmq-for-kubernetes-operator
        tag: "0.7.0-build.41"
    ```

    Customize the values `imageUsername` and `imagePassword`.
    If you were able to pull the image registry when following the steps in
    [Verify Your Access to the Image Registry](#helm-verify-docker-access) above, these credentials are your
    VMware Tanzu Network username and password.

    If you were not able to pull the image registry, these credentials are likely the ones used in the
    [Move the Images](#relocate) section above.
    If you had to move the images, you have to customize `imageRegistry` and `images.operator.name` to match
    the registry and the image name provided when you moved the images.

    This is an example of a customized values file:

    ```
    global:
      imageRegistry: someregistry.example.com
      # This is Pivotal Network username/email address
      imageUsername: myuser@example.com
      imagePassword: mypassword
    images:
      operator:
        name: someregistry.example.com/some-project/rabbitmq-for-kubernetes-operator
        tag: "0.7.0-build.41"
    ```

### <a id='helm-install-op'></a> Helm Install

To install the Operator using Helm:

1. Run:

    ```
    helm -n default install -f myvalues.yaml rabbitmq-for-kubernetes p-rabbitmq-for-kubernetes/rabbitmq-operator
    ```

    Helm uses the option `-n default` to store a Kubernetes secret in the default namespace.
    Helm does this to avoid potential failures caused by `kubectl` context referencing non-existing namespaces.

1. Verify the output of the `helm install` command. See an example below.

    ```
    NAME: rabbitmq-for-kubernetes
    LAST DEPLOYED: Tue Mar 31 16:13:05 2020
    NAMESPACE: default
    STATUS: deployed
    REVISION: 1
    TEST SUITE: None
    ```
