---
title: Installing VMware Tanzu RabbitMQ &#91;Kubernetes&#93; with Kubectl
owner: RMQ for k8s
---

<strong><%= modified_date %></strong>

This topic describes how to install and configure <%= vars.product_full %> without using a Helm chart.

In most cases, using a Helm chart is the fastest way to install <%= vars.product_short %>.
To install and configure <%= vars.product_full %> using a Helm chart hosted on
<%= vars.product_network %>, follow the procedures in
[Installing <%= vars.product_full %> with a Helm Chart](./installing-with-helm.html) instead.


## <a id='prerequisites'></a> Prerequisites

Before you install and configure <%= vars.product_short %>, you must install and configure:

* **kubectl:** For installation instructions,
see the [Kubernetes documentation](https://kubernetes.io/docs/tasks/tools/install-kubectl/).

* **The Docker CLI:** For installation instructions,
see the [Docker documentation](https://docs.docker.com/install/).

* **A Kubernetes cluster:** You must use Kubernetes v1.14 or later. A default StorageClass has to be
configured or you need to specify which StorageClass to use.

* **A private image registry:** VMware recommends that you keep the Kubernetes Operator image private
even if your registry is publicly accessible.
If you do not have access to a private image registry, email the team at rabbitmq-for-k8s@pivotal.io
for help.


## <a id='overview'></a> Overview

To install and configure <%= vars.product_short %>:

1. [Download <%= vars.product_full %>](#artifact)
1. [Set a Version Variable](#set-ver-var)
1. [Move the Images](#relocate)
1. [Create the Namespace and Role-Based Access Control Objects](#namespace-rbac)
1. [(Optional) Configure Kubernetes Cluster Access to Private Images](#private-images)
1. [Configure the Image Registry](#image-repo)
1. [Install <%= vars.product_short %>](#deploy-op)


## <a id='artifact'></a> Download <%= vars.product_short %>

To download the <%= vars.product_short %> artifact:

1. Download the **<%= vars.product_short %>** artifact from
[<%= vars.product_network %>](https://network.pivotal.io/products/p-rabbitmq-for-kubernetes/).

The artifact contains Docker images, deployment manifests for the Kubernetes Operator, and a Helm chart.
You can deploy <%= vars.product_short %> with the Helm chart by using Container Service Manager (KSM).
For more information, see [Using <%= vars.product_full %> with Container Service Manager](./ksm.html).
<br><br>
The images are for:

* RabbitMQ
* The Kubernetes Operator


## <a id='set-ver-var'></a> Set a Version Variable

<%= partial vars.path_to_partials + '/rabbitmq-kubernetes/set-a-version-variable' %>

## <a id='relocate'></a> Move the Images

<%= partial vars.path_to_partials + '/rabbitmq-kubernetes/move-the-images' %>

## <a id='namespace-rbac'></a> Create the Namespace and Role-Based Access Control Objects

To create the namespace and role-based access control (RBAC) objects:

1. Create a `pivotal-rabbitmq-system` namespace by running:

    ```
    kubectl apply -f manifests/namespace.yaml
    ```

1. Create RBAC objects in the `pivotal-rabbitmq-system` namespace by running:

    ```
    kubectl apply -f manifests/rbac.yaml
    ```


## <a id='private-images'></a> (Optional) Configure Kubernetes Cluster Access to Private Images

If you require authentication to pull images from your private image registry, you must authorize
access to the images from the `pivotal-rabbitmq-system` namespace.

<p class=note>
  <strong>Note:</strong> If your registry is publicly accessible, VMware recommends that you keep your
  Kubernetes Operator image in a private image registry.
</p>

To authorize access to images:

1. Create a secret for your private image registry by running:

    ```
    kubectl -n pivotal-rabbitmq-system create secret \
    docker-registry p-rmq-registry-access \
    --docker-server=DOCKER-SERVER \
    --docker-username=DOCKER-USERNAME \
    --docker-password=DOCKER-PASSWORD
    ```
    Where:
    + `DOCKER-SERVER` is the server URL for your private image registry.
    + `DOCKER-USERNAME` is your username for your private image registry authentication.
    + `DOCKER-PASSWORD` is your password for your private image registry authentication.

    For example:
    <pre class="terminal">
    $ kubectl -n pivotal-rabbitmq-system create secret \
    docker-registry p-rmq-registry-access \
    --docker-server=docker.io/my-registry \
    --docker-username=my-username \
    --docker-password=example-password1
    secret/p-rmq-registry-access created
    </pre>

1. Update your service account by running:

    ```
    kubectl -n pivotal-rabbitmq-system patch serviceaccount \
    p-rmq-operator -p '{"imagePullSecrets": [{"name": "p-rmq-registry-access"}]}'
    ```


## <a id='image-repo'></a> Configure the Image Registry

To configure the image registry:

1. Edit `manifests/operator.yaml`.
1. Replace all instances of `REPLACE-WITH-OPERATOR-IMAGE-URL` with the full Kubernetes Operator image
reference and explicit version.
This reference should look similar to the below:

    ```
    image: YOUR-REGISTRY/rabbitmq-for-kubernetes-operator:YOUR-VERSION-NUMBER
    ```


## <a id='deploy-op'></a> Install <%= vars.product_short %>

To install <%= vars.product_short %>:

1. Apply the Kubernetes manifests you configured in the steps above by running:

    ```
    kubectl apply -f manifests/
    ```

    When you do so, kubectl:
    * Deploys the Kubernetes Operator
    * Installs the `RabbitmqCluster` custom resource definition (CRD)

To uninstall the product,
follow the procedure in [Uninstall <%= vars.product_short %> ](./upgrading.html#uninstall-manifests).
